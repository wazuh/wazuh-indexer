name: Build packages

# This workflow runs when any of the following occur:
# - Run manually
on:
  workflow_dispatch:
    # TODO dynamic matrix or filtering complete matrix based on inputs
    # inputs:
    #   distribution:
    #     description: 'One of [ "tar", "rpm", "deb", "all" ]'
    #     default: 'all'
    #     required: false
    #     type: string
    #   architecture:
    #     description: 'One of [ "x64", "arm64", "all" ]'
    #     default: 'x64'
    #     required: true
    #     type: string

# TODO para pasar el nombre del paquete del stage build al stage assemble hay que usar outputs

# ==========================
# Bibliography
# ==========================
#
# * Reusable workflows: limitations
#   | https://docs.github.com/en/actions/using-workflows/reusing-workflows#limitations
# * Using matrix in reusable workflows:
#   | https://docs.github.com/en/actions/using-workflows/reusing-workflows#using-a-matrix-strategy-with-a-reusable-workflow
#  * Reading input from the called workflow
#   | https://docs.github.com/en/enterprise-cloud@latest/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputs

env:
  ACT: # Used to run locally using https://github.com/nektos/act

jobs:
  build:
    strategy:
      matrix:
        DISTRIBUTION: [tar, rpm, deb]
        ARCHITECTURE: [x64, arm64]
    uses: ./.github/workflows/r_build.yml
    with:
      architecture: ${{ matrix.ARCHITECTURE }}
      distribution: ${{ matrix.DISTRIBUTION }}

  assemble:
    needs: build
    strategy:
      matrix:
        DISTRIBUTION: [tar, rpm, deb]
        ARCHITECTURE: [x64, arm64]
    uses: ./.github/workflows/r_assemble.yml
    with:
      architecture: ${{ matrix.ARCHITECTURE }}
      distribution: ${{ matrix.DISTRIBUTION }}
      package: ${{ needs.build.outputs.package }}
      

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     # Permissions to upload the package
#     permissions:
#       packages: write
#       contents: read
#     strategy:
#       # For use with act
#       # max-parallel: 1
#       # matrix:
#       #   DISTRIBUTION: [rpm, tar]
#       #   ARCHITECTURE: [x64]
#       matrix:
#         DISTRIBUTION: [tar, rpm, deb]
#         ARCHITECTURE: [x64, arm64]
#     outputs:
#       package: ${{ steps.r_build.outputs.package }}
#     steps:
#       - name: Run `build.sh`
#         id: r_build
#         uses: ./.github/workflows/r_build.yml
#         with:
#           architecture: ${{ matrix.ARCHITECTURE }}
#           distribution: ${{ matrix.DISTRIBUTION }}
      
#       - name: Run `assemble.sh`
#         uses: ./.github/workflows/r_assemble.yml
#         with:
#           architecture: ${{ matrix.ARCHITECTURE }}
#           distribution: ${{ matrix.DISTRIBUTION }}
#           package: ${{ needs.build.outputs.package }}
#           # TODO comprobar si usa la misma m√°quina y hay acceso a ./artifacts/dist

  # assemble:
  #   # needs: [build]
  #   runs-on: ubuntu-latest
  #   # Permissions to upload the package
  #   permissions:
  #     packages: write
  #     contents: read
  #   strategy:
  #     # For use with act
  #     max-parallel: 1
  #     matrix:
  #       DISTRIBUTION: [rpm]
  #       ARCHITECTURE: [x64]
  #     # matrix:
  #     #   DISTRIBUTION: [ tar, rpm, deb ]
  #     #   ARCHITECTURE: [ x64, arm64 ]
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: wazuh-indexer-*${{ matrix.ARCHITECTURE }}*${{ matrix.DISTRIBUTION }}
  #         # name: ${{ needs.build.outputs.package_name }}
  #         # path: artifacts/dist/${{ needs.build.outputs.package_name }}

  #     - name: Output package name
  #       run: |
  #         echo "Assembly jobs for ${{ matrix.ARCHITECTURE }} ${{ matrix.DISTRIBUTION }}"
  #         echo "package_name=${{ needs.build.outputs.package_name }}"

  #     - name: Install dependencies
  #       run: |
  #         apt-get update
  #         apt-get install -y rpm2cpio rpm cpio

  #     - uses: actions/checkout@v4
  #     - name: Run `assemble.sh`
  #       run: |
  #         $ASSEMBLE -v $VERSION -p $PLATFORM -a ${{ matrix.ARCHITECTURE }} -d ${{ matrix.DISTRIBUTION }}

  # release:
