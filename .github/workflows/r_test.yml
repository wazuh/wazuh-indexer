name: Test (reusable)

# This workflow runs when any of the following occur:
# - Run from another workflow
on:
  workflow_call:
    inputs:
      revision:
        description: "Revision number"
        type: string
        default: "0"
      is_release:
        description: "Uses release's nomenclature"
        type: boolean
        default: false
      distribution:
        description: One of "[ 'tar', 'rpm', 'deb', 'docker' ]"
        type: string
        required: true
      architecture:
        description: One of "[ 'x64', 'arm64' ]"
        type: string
        required: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run `baptizer.sh` (min)
        run: |
          name=$(bash scripts/baptizer.sh \
            ${{ inputs.is_release && '-x' }} \
            -a ${{ inputs.architecture }} \
            -d ${{ inputs.distribution }}  \
            -r ${{ inputs.revision }} \
          )
          echo "$name" >> $GITHUB_OUTPUT
        id: package
    outputs:
      package_name: ${{ steps.package.outputs.name }}

  r_test_rpm:
    if: ${{ inputs.distribution == 'rpm' }}
    runs-on: ubuntu-latest
    # Permissions to download the package
    permissions:
      packages: read
      contents: read
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.setup.outputs.package_name }}
          path: artifacts/dist

      - name: Install package
        uses: addnab/docker-run-action@v3
        with:
          image: redhat/ubi9:latest
          options: -v ${{ github.workspace }}/artifacts/dist:/artifacts/dist
          run: |
            yum localinstall "/artifacts/dist/${{ needs.setup.outputs.package_name }}" -y

  r_test_deb:
    if: ${{ inputs.distribution == 'deb' }}
    runs-on: ubuntu-latest
    # Permissions to download the package
    permissions:
      packages: read
      contents: read
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.setup.outputs.package_name }}
          path: artifacts/dist

      - name: Install package
        run: |
          sudo dpkg -i "artifacts/dist/${{ needs.setup.outputs.package_name }}"

      - uses: actions/checkout@v4
      - name: Generate and deploy certificates
        uses: addnab/docker-run-action@v3
        with:
          image: wazuh/wazuh-certs-generator:0.0.1
          options: -v ${{ github.workspace }}/integrations/docker/config/certs.yml:/config/certs.yml -v /etc/wazuh-indexer/certs:/certs
          shell: sh
          run: |
            mkdir -p /certificates /certs
            /entrypoint.sh
            chown -R 1000:999 /certificates
            chmod 740 /certificates
            chmod 440 /certificates/*

            mv /certificates/wazuh.indexer-key.pem  /certs/indexer-key.pem
            mv /certificates/wazuh.indexer.pem      /certs/indexer.pem
            mv /certificates/root-ca.pem            /certs/root-ca.pem
            ls /certs

      - run: sudo systemctl daemon-reload
      - run: |
          if ! sudo systemctl enable wazuh-indexer.service; then
              sudo journalctl --no-pager -u wazuh-indexer.service
              exit 1
          fi
      - run: |
          if ! sudo systemctl start wazuh-indexer; then
            sudo journalctl --no-pager -u wazuh-indexer.service
            exit 1
          fi
      - run: |
          if ! sudo systemctl status --no-pager wazuh-indexer -n 100; then
            sudo journalctl --no-pager -u wazuh-indexer.service
            exit 1
          fi
