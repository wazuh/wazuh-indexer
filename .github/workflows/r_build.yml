name: Build (reusable)

# This workflow runs when any of the following occur:
# - Run from another workflow
on:
  workflow_call:
    inputs:
      distribution:
        description: 'One of [ "tar", "rpm", "deb" ]'
        default: 'rpm'
        required: false
        type: string
      architecture:
        description: 'One of [ "x64", "arm64" ]'
        default: 'x64'
        required: false
        type: string
    outputs:
      package:
        description: "The package's name"
        value: ${{ jobs.r_build.outputs.package }}
      
# TODO version must to be read from the VERSION file
# TODO revision must be an input
env:
  version: 4.9.0
  revision: 1

jobs:
  r_build:
    # runs-on: ${{ inputs.architecture }}
    runs-on: ubuntu-latest
    # Permissions to upload the package
    permissions:
      packages: write
      contents: read
    outputs:
      package: ${{ steps.get_name.outputs.name }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.9.0

      - name: Run `build.sh`
        run: |
          bash scripts/build.sh -v ${{ vars.OPENSEARCH_VERSION }} -s false -p linux -a ${{ inputs.architecture }} -d ${{ inputs.distribution }}

      # The package name is stored in the artifacts/artifact_name.txt file.
      # The variable name is generated dynamically: rpm_x64
      - name: Set package name
        id: get_name
        run: |
          echo $(ls -la)
          # ${{ inputs.distribution }}_${{ inputs.architecture }}
          echo "name=$(cat artifacts/artifact_name.txt)" >> $GITHUB_OUTPUT
          echo "$(cat artifacts/artifact_name.txt)"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          # name: wazuh-indexer-min_${{ env.version }}-${{ env.revision }}_${{ inputs.architecture }}_${{ github.sha }}.${{ inputs.distribution }}
          # example: x64/deb/wazuh-indexer_4.8.0-rc1_x64_ff98475f.deb
          # TODO x64 -> deb: amd64, rpm: x86_64 
          name: ${{ steps.get_name.outputs.name }}
          path: ${{ inputs.architecture }}/${{ inputs.distribution }}
          if-no-files-found: error



