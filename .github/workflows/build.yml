name: Build packages

# This workflow runs when any of the following occur:
# - Run manually
on:
  workflow_dispatch:

# Used to run locally using https://github.com/nektos/act
env:
  ACT:
  VERSION: 2.11.0
  SNAPSHOT: false
  PLATFORM: linux
  BUILD: bash scripts/build.sh
  ASSEMBLE: bash scripts/assemble.sh

jobs:
  build:
    runs-on: ubuntu-latest
    # Permissions to upload the package
    permissions:
      packages: write
      contents: read
    strategy:
      # For use with act
      # max-parallel: 1
      # matrix:
      #   DISTRIBUTION: [rpm, tar]
      #   ARCHITECTURE: [x64]
      matrix:
        DISTRIBUTION: [tar, rpm, deb]
        ARCHITECTURE: [x64, arm64]
    outputs:
      package_name: ${{ steps.get_package_name.outputs.package_name }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.9.0

      - name: Run `build.sh`
        run: |
          $BUILD -v $VERSION -s $SNAPSHOT -p $PLATFORM -a ${{ matrix.ARCHITECTURE }} -d ${{ matrix.DISTRIBUTION }}

          # The package name is stored in the artifacts/artifact_name.txt file
      - name: Read package name
        id: get_package_name
        run: |
          echo $(ls -la)
          echo "package_name=$(cat artifacts/artifact_name.txt)" >> $GITHUB_OUTPUT
          echo "$(cat artifacts/artifact_name.txt)"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.get_package_name.outputs.package_name }}
          path: artifacts/dist/${{ steps.get_package_name.outputs.package_name }}
          if-no-files-found: error

  # assemble:
  #   # needs: [build]
  #   runs-on: ubuntu-latest
  #   # Permissions to upload the package
  #   permissions:
  #     packages: write
  #     contents: read
  #   strategy:
  #     # For use with act
  #     max-parallel: 1
  #     matrix:
  #       DISTRIBUTION: [rpm]
  #       ARCHITECTURE: [x64]
  #     # matrix:
  #     #   DISTRIBUTION: [ tar, rpm, deb ]
  #     #   ARCHITECTURE: [ x64, arm64 ]
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: wazuh-indexer-*${{ matrix.ARCHITECTURE }}*${{ matrix.DISTRIBUTION }}
  #         # name: ${{ needs.build.outputs.package_name }}
  #         # path: artifacts/dist/${{ needs.build.outputs.package_name }}

  #     - name: Output package name
  #       run: |
  #         echo "Assembly jobs for ${{ matrix.ARCHITECTURE }} ${{ matrix.DISTRIBUTION }}"
  #         echo "package_name=${{ needs.build.outputs.package_name }}"

  #     - name: Install dependencies
  #       run: |
  #         apt-get update
  #         apt-get install -y rpm2cpio rpm cpio

  #     - uses: actions/checkout@v4
  #     - name: Run `assemble.sh`
  #       run: |
  #         $ASSEMBLE -v $VERSION -p $PLATFORM -a ${{ matrix.ARCHITECTURE }} -d ${{ matrix.DISTRIBUTION }}

  # release:
