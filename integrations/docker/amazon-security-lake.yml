version: '3'
name: "amazon-security-lake"
services:
  events-generator:
    image: wazuh/indexer-events-generator
    build:
      context: ../tools/events-generator
    container_name: events-generator
    depends_on:
      - wazuh.indexer
    networks:
      - net
    # TODO add healthcheck to indexer's service to avoid sending requests before API is ready.
    command: bash -c "sleep 10 && echo 'Ey, wake up!' && python run.py -a wazuh.indexer"

  wazuh.indexer:
    image: opensearchproject/opensearch:latest
    container_name: wazuh.indexer
    hostname: wazuh.indexer
    environment:
      # - cluster.name=opensearch-cluster
      - node.name=wazuh.indexer
      - discovery.type=single-node
      # - cluster.initial_cluster_manager_nodes=opensearch-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - data:/usr/share/opensearch/data
    networks:
      - net

  wazuh.dashboard:
    image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: wazuh.dashboard
    hostname: wazuh.dashboard
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      OPENSEARCH_HOSTS: '["https://wazuh.indexer:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
    networks:
      - net
  
  wazuh.integration.security.lake:
    image: wazuh/indexer-security-lake-integration
    build:
      context: ../amazon-security-lake
    container_name: wazuh.integration.security.lake
    hostname: wazuh.integration.security.lake
    environment:
      LOG_LEVEL: trace
      LOGSTASH_KEYSTORE_PASS: "SecretPassword"
      MONITORING_ENABLED: false
      AWS_KEY: "AKIAIOSFODNN7EXAMPLE"
      AWS_SECRET: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ../amazon-security-lake/logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - wazuh.indexer
    networks:
      - net
    command: tail -f /dev/null
    # command: /usr/share/logstash/bin/logstash -f /usr/share/logstash/pipeline/indexer-to-integrator.conf --path.settings /etc/logstash

  s3.ninja:
    image: scireum/s3-ninja:latest
    container_name: s3.ninja
    hostname: s3.ninja
    ports:
      - "9444:9000"
    volumes:
      - s3-data:/home/sirius/data
    networks:
      - net

volumes:
  data:
  s3-data:

networks:
  net: